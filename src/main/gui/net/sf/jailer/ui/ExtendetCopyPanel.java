/*
 * Copyright 2007 - 2022 Ralf Wisser.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package net.sf.jailer.ui;

import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Point;
import java.awt.Window;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JTable;
import javax.swing.SwingUtilities;

import org.fife.rsta.ui.EscapableDialog;

/**
 * Extendet Copy Panel.
 * 
 * @author Ralf Wisser
 */
@SuppressWarnings("serial")
public class ExtendetCopyPanel extends javax.swing.JPanel {

	public static void openDialog(JTable jTable) {
		Window owner = SwingUtilities.getWindowAncestor(jTable);
		EscapableDialog dialog;
		if (owner instanceof Dialog) {
			dialog = new EscapableDialog((Dialog) owner) {
			};
		} else if (owner instanceof Frame) {
			dialog = new EscapableDialog((Frame) owner) {
			};
		} else {
			return;
		}
		dialog.setModal(false);
		
		ExtendetCopyPanel copyPanel = new ExtendetCopyPanel();
		dialog.getContentPane().add(copyPanel);
		
		dialog.pack();
		
		Point mid = new Point(jTable.getParent().getWidth() / 2 - dialog.getWidth() / 2, jTable.getParent().getHeight() / 2 - dialog.getHeight() / 2);
		SwingUtilities.convertPointToScreen(mid, jTable);

		mid.x = Math.min(mid.x, owner.getX() + owner.getWidth() - dialog.getWidth() - 4);
		mid.y = Math.min(mid.y, owner.getY() + owner.getHeight() - dialog.getHeight() - 4);
		mid.x = Math.max(mid.x, owner.getX() + 4);
		mid.y = Math.max(mid.y, owner.getY() + 4);
		dialog.setLocation(mid);
		
		dialog.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosed(WindowEvent e) {
				UIUtil.setPopupActive(false);
			}
		});
		UIUtil.setPopupActive(true);
		dialog.setVisible(true);
	}

    private ExtendetCopyPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Copy and CLose");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(138, 163, 139, 164);
        add(jButton1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
